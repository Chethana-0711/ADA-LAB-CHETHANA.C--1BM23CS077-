#include <stdio.h>
#include <stdlib.h>
#include <time.h>

int partition(int arr[], int low, int high) {
    int pivot = arr[high];
    int i = low - 1;
    for (int j = low; j < high; j++) {
        if (arr[j] < pivot) {
            i++;
            int temp = arr[i]; arr[i] = arr[j]; arr[j] = temp;
        }
    }
    int temp = arr[i + 1]; arr[i + 1] = arr[high]; arr[high] = temp;
    return i + 1;
}

void quickSort(int arr[], int low, int high) {
    if (low < high) {
        int pi = partition(arr, low, high);
        quickSort(arr, low, pi - 1);
        quickSort(arr, pi + 1, high);
    }
}

void printArray(int arr[], int n) {
    for (int i = 0; i < n; i++)
        printf("%d ", arr[i]);
    printf("\n");
}

int main() {
    int N;
    printf("Enter number of elements (N): ");
    scanf("%d", &N);
    int arr[N];
    srand(time(0));
    for (int i = 0; i < N; i++)
        arr[i] = rand() % 1000;
    printf("Original array:\n");
    printArray(arr, N);
    clock_t start = clock();
    quickSort(arr, 0, N - 1);
    clock_t end = clock();
    printf("Sorted array:\n");
    printArray(arr, N);
    double time_taken = ((double)(end - start)) / CLOCKS_PER_SEC;
    printf("Time taken to sort %d elements = %f seconds\n", N, time_taken);
    return 0;
}
